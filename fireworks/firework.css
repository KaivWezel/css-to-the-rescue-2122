:root {
	--black: rgb(70, 70, 70);
	--black-dark: rgb(30, 30, 30);
	--black-light: rgb(100, 100, 100);
	--white: rgb(230, 230, 230);
	--white-dark: rgb(200, 200, 200);
	--white-light: rgb(255, 255, 255);
	--color1: rgb(17, 0, 250);
	--color2: rgb(255, 238, 0);
	--color3: hotpink;

	--circle1: repeating-radial-gradient(
		circle,
		black,
		black 20px,
		var(--white) 20px,
		var(--white) 40px,
		black 40px,
		black 60px,
		var(--white) 60px,
		var(--white) 80px,
		black 80px
	);

	--circle2: repeating-radial-gradient(
		circle,
		var(--color1),
		var(--color1) 20px,
		var(--color2) 20px,
		var(--color2) 40px,
		var(--color1) 40px,
		var(--color1) 60px,
		var(--color2) 60px,
		var(--color2) 80px,
		var(--color1) 80px
	);

	--circle3: repeating-radial-gradient(
		circle,
		rgb(138, 136, 10),
		rgb(0, 241, 229) 20px,
		green 20px,
		purple 40px,
		rgb(241, 0, 201) 40px,
		rgb(0, 241, 229) 60px,
		green 60px,
		purple 80px,
		rgb(0, 241, 229) 80px
	);
}

/* =============== */
/* Generic styling */
/* =============== */

* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
	font-family: sans-serif;
}

body {
	background: var(--white);
	color: var(--black);
	height: 100vh;
}

main {
	width: 100%;
	height: 100vh;
	background: var(--white);
	margin: auto;
	position: relative;
	border: 1px solid gray;
	text-align: center;
}

main > input {
	display: none;
}

main > input + label {
	display: inline-block;
	border-radius: 4px;
	background: var(--white);
	padding: 0.5rem;
	margin: 1rem;
	box-shadow: 6px 6px 10px var(--white-dark), -6px -6px 10px var(--white-light);
	cursor: pointer;
}

main > input:checked + label {
	box-shadow: inset 6px 6px 10px var(--white-dark),
		inset -6px -6px 10px var(--white-light);
}

/* ------------- */
/* Markup shell1 */
/* ------------- */

article:nth-of-type(1) {
	display: none;
	width: 20px;
	height: 20px;
	background: var(--black);
	position: absolute;
	top: 30%;
	left: 60%;
}

input[name="shell1"]:checked ~ article:nth-of-type(1) {
	display: block;
	animation: shell1 3s ease-out forwards;
}

/* positioning trails */
article:nth-of-type(1) span {
	display: block;
	width: 10vw;
	height: 3px;
	/* background: var(--white-dark); */
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%) rotateZ(calc(var(--count) * 45deg))
		translateX(20%);
}

/* Styling trails */
article:nth-of-type(1) span::before {
	content: "";
	position: absolute;
	width: 100%;
	height: 100%;
	transform: scale(0, 1);
	background: var(--black);
	animation: explosion1 1s ease 3s forwards;
}

/* Defining variables for calculation */
article:nth-of-type(1) span:nth-child(1) {
	--count: 1;
}
article:nth-of-type(1) span:nth-child(2) {
	--count: 2;
}
article:nth-of-type(1) span:nth-child(3) {
	--count: 3;
}
article:nth-of-type(1) span:nth-child(4) {
	--count: 4;
}
article:nth-of-type(1) span:nth-child(5) {
	--count: 5;
}
article:nth-of-type(1) span:nth-child(6) {
	--count: 6;
}
article:nth-of-type(1) span:nth-child(7) {
	--count: 7;
}
article:nth-of-type(1) span:nth-child(8) {
	--count: 8;
}

/* ------------- */
/* Markup shell2 */
/* ------------- */

article:nth-of-type(2) {
	--rotation-step: 60deg;
}

input[name="shell2"]:checked ~ article:nth-of-type(2) {
	display: block;
	animation: shell2 5s ease-out forwards;
}

article:nth-of-type(2) {
	display: none;
	position: absolute;
	width: 20px;
	height: 20px;
	top: 40%;
	left: 50%;
	transform: translate(-50%, -50%) rotate(0deg);
}

article:nth-of-type(2)::before {
	content: "Click me!";
	display: block;
	white-space: nowrap;
	position: absolute;
	transform: translate(-40%, -2rem);
}

/* Code only works in Safari TP  */

/* article:nth-of-type(2):has(> input:checked) {
	animation: rotate 13s ease-in-out infinite alternate;
} */

article:nth-of-type(2) input {
	position: absolute;
	opacity: 0;
}

article:nth-of-type(2) label {
	display: block;
	position: absolute;
	width: 100%;
	height: 100%;

	/* Used this to reuse animation keyframes */
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);

	background: var(--black);
	animation: rotate 1s linear infinite;
}

article:nth-of-type(2) > p {
	position: relative;
	width: 100%;
	height: 100%;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);

	pointer-events: none;
	background: var(--black);
	clip-path: none;

	animation: grow 1s ease-out forwards,
		rotate 23s ease-in-out infinite alternate;
	animation-play-state: paused, running;
}

article:nth-of-type(2) button {
	all: unset;
	display: none;
	position: absolute;
	border: none;
	/* overflow: hidden; */
	width: 100%;
	height: 100%;
	transform-origin: center;
	border-radius: 50%;
	mix-blend-mode: difference;
	background-position: center;
	background-image: var(--circle2);
	animation: hypno 9s linear 0s infinite alternate;
}

article:nth-of-type(2) input:checked ~ p {
	width: 300px;
	height: 300px;
	animation-play-state: running, running;
}

article:nth-of-type(2) input:checked ~ p button {
	display: block;
}

article:nth-of-type(2) button:nth-of-type(1) {
	--rotation: calc(0 * var(--rotation-step));
	transform: rotate(var(--rotation)) translateX(50%);
}

article:nth-of-type(2) button:nth-of-type(2) {
	--rotation: calc(1 * var(--rotation-step));
	transform: rotate(var(--rotation)) translateX(50%);
	animation-delay: -9s;
}

article:nth-of-type(2) button:nth-of-type(3) {
	--rotation: calc(2 * var(--rotation-step));
	transform: rotate(var(--rotation)) translateX(50%);
}

article:nth-of-type(2) button:nth-of-type(4) {
	--rotation: calc(3 * var(--rotation-step));
	transform: rotate(var(--rotation)) translateX(50%);
	animation-delay: -9s;
}

article:nth-of-type(2) button:nth-of-type(5) {
	--rotation: calc(4 * var(--rotation-step));
	transform: rotate(var(--rotation)) translateX(50%);
}

article:nth-of-type(2) button:nth-of-type(6) {
	--rotation: calc(5 * var(--rotation-step));
	transform: rotate(var(--rotation)) translateX(50%);
	animation-delay: -9s;
}

article:nth-of-type(2) button:nth-of-type(7) {
	background-image: var(--circle3);
	animation: grow2 9s ease-in-out infinite alternate;
}

/* -------------- */
/* Markup shell 3 */
/* -------------- */

article:nth-of-type(3) {
	display: none;
	width: 5px;
	height: 5px;
	background: var(--black);
	position: absolute;
	top: 50%;
	left: 50%;
	transform-style: preserve-3d;
	perspective: 1000px;
}

input[name="shell3"]:checked ~ article:nth-of-type(3) {
	display: block;
	animation: shell3 4s ease-out forwards;
}

article:nth-of-type(3) button {
	position: absolute;
	padding: 0.5rem;
	background: var(--black-light);
	color: var(--white);
	border: none;
}

article > button:nth-child(1) {
	left: -200px;
}
article > button:nth-child(2) {
	right: -200px;
}

article nav {
	width: 100%;
	height: 100%;
	transform-origin: center;
	transform-style: preserve-3d;
	perspective: 1000px;
	animation: spin 7s linear infinite paused;
}

article > button:nth-child(1):active ~ nav {
	animation-play-state: running;
	animation-direction: normal;
}
article > button:nth-child(2):active ~ nav {
	animation-play-state: running;
	animation-direction: reverse;
}

nav ul {
	list-style-type: none;
	transform-origin: center;
	position: absolute;
	width: 100%;
	height: 100%;

	transform-style: preserve-3d;
}

nav ul:nth-child(2) {
	transform: rotateY(45deg);
}
nav ul:nth-child(3) {
	transform: rotateY(90deg);
}
nav ul:nth-child(4) {
	transform: rotateY(-45deg);
}

nav li {
	--rotation-step: 45deg;
	width: 20vw;
	max-width: 400px;
	height: 10px;
	/* background: var(--black-dark); */
	position: absolute;
	top: 50%;
	left: 50%;

	transform-style: preserve-3d;
	transform: translate(-50%, -50%)
		rotate(calc(var(--count) * var(--rotation-step))) translateX(60%);
	border-radius: 2rem;
}

nav li:nth-child(1) {
	--count: 1;
}
nav li:nth-child(2) {
	--count: 2;
}
nav li:nth-child(3) {
	--count: 3;
}
nav li:nth-child(4) {
	--count: 4;
}
nav li:nth-child(5) {
	--count: 5;
}
nav li:nth-child(6) {
	--count: 6;
}
nav li:nth-child(7) {
	--count: 7;
}
nav li:nth-child(8) {
	--count: 8;
}

input[name="shell3"]:checked ~ article nav li::before,
input[name="shell3"]:checked ~ article nav li::after {
	content: "";
	display: block;
	height: 100%;
	width: 100%;
	position: absolute;
	background: var(--black-dark);
	border-radius: 2rem;

	animation: bang 8.5s cubic-bezier(0.21, 0.54, 0.62, 0.99) 4s normal;
}

nav li::before {
	--rotation: 60deg;
	transform: rotateX(60deg) scale(0);
}

nav li::after {
	--rotation: -60deg;
	transform: rotateX(-60deg) scale(0);
}

/* ================= */
/* Animations shell 1*/
/* ================= */

/* Animation shell1 flight */
@keyframes shell1 {
	0% {
		top: 100%;
		left: 20%;
		transform: rotateZ(560deg);
		border-radius: 0;
	}
	10% {
		border-radius: 0;
	}
	45% {
		border-radius: 50%;
	}
	50% {
		border-radius: 0;
	}
	60% {
		border-radius: 0;
	}
	65% {
		border-radius: 50%;
	}
	95% {
		border-radius: 50%;
		background: var(--black);
		transform: scale(1);
	}
	98% {
		transform: scale(1.5);
	}
	100% {
		top: 30%;
		left: 60%;
		transform: rotateZ(0deg) scale(1.5);
		border-radius: 50%;
		background: transparent;
	}
}

/* Animation for explosion */
@keyframes explosion1 {
	0% {
		transform: scale(0, 1);
		transform-origin: left;
	}
	50% {
		transform: scale(1, 1);
		transform-origin: left;
	}
	60% {
		transform: scale(1, 1);
		transform-origin: right;
	}
	100% {
		transform: scale(0, 1);
		transform-origin: right;
	}
}
/* ================== */
/* Animations shell 2 */
/* ================== */

@keyframes shell2 {
	0% {
		top: 100%;
	}
	100% {
		top: 40%;
	}
}

/* Animation for rotating shell + circles */
@keyframes rotate {
	from {
		transform: translate(-50%, -50%) rotate(0%);
	}
	to {
		transform: translate(-50%, -50%) rotate(360deg);
	}
}

@keyframes grow {
	from {
		clip-path: circle(0%);
	}
	to {
		clip-path: circle(40%);
	}
}

@keyframes grow2 {
	from {
		transform: scale(1.8);
	}
	to {
		transform: scale(0.8);
	}
}

@keyframes hypno {
	from {
		transform: rotate(var(--rotation)) translateX(10%);
	}
	to {
		transform: rotate(var(--rotation)) translateX(60%);
	}
}

/* ================== */
/* Animations shell 3 */
/* ================== */

@keyframes shell3 {
	0% {
		top: 100%;
	}
	95% {
		top: 40%;
		background: var(--black);
	}
	100% {
		top: 40%;
		background: transparent;
	}
}

/* For rotation of the shell */
@keyframes spin {
	from {
		transform: rotateY(0);
	}
	to {
		transform: rotateY(360deg);
	}
}

/* First variant of explosion */
@keyframes bang {
	0% {
		transform: rotateX(var(--rotation)) scaleX(0%);
		transform-origin: left;
	}
	50% {
		transform: rotateX(var(--rotation)) scaleX(100%);
		transform-origin: left;
	}
	55% {
		transform: rotateX(var(--rotation)) scaleX(100%);
		transform-origin: right;
	}
	80% {
		transform: rotateX(var(--rotation)) scaleX(10%);
		transform-origin: right;
	}
	100% {
		transform: rotateX(var(--rotation)) scale(0%);
		transform-origin: right;
	}
}

@keyframes bang2 {
	0% {
		transform: rotateX(var(--rotation)) scaleX(0%);
		transform-origin: left;
	}
	50% {
		transform: rotateX(var(--rotation)) scaleX(100%);
		transform-origin: left;
	}
	55% {
		transform: rotate(var(--rotation)) scaleX(100%);
		transform-origin: right;
	}
	70% {
		transform: rotate(var(--rotation)) scale(10%);
		transform-origin: right;
	}
	100% {
		transform: rotate(var(--rotation)) scale(0%);
		transform-origin: right;
	}
}
